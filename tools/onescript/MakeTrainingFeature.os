#Использовать logos

Перем Лог;

Процедура СоздатьФичаФайл(Путь, ИмяФичаФайлаЗаготовка)
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФичаФайлаЗаготовка, "UTF-8");
	ТекстЗаготовка = Текст.Прочитать();
	Текст.Закрыть();
	
	ЗаголовокЗаготовка = "";
	ТекстСценарияЗаготовка = "";
	
	НайденаСтрокаСценария = Ложь;
	МассивСтрок = СтрРазделить(ТекстЗаготовка, Символы.ПС);
	Для Сч = 0 По МассивСтрок.Количество()-1 Цикл
		Стр = МассивСтрок[Сч];
		
		Если Найти(Стр, "Сценарий:") > 0 Тогда
			НайденаСтрокаСценария = Истина;
		КонецЕсли;	 
		
		Если НайденаСтрокаСценария Тогда
			ТекстСценарияЗаготовка = ТекстСценарияЗаготовка + Стр + Символы.ПС;
		Иначе
			ЗаголовокЗаготовка = ЗаголовокЗаготовка + Стр + Символы.ПС;
		КонецЕсли;	 
		
	КонецЦикла;	
	
	Если НЕ НайденаСтрокаСценария Тогда
		ВызватьИсключение "Не найдена строка сценария в заготовке.";
	КонецЕсли;	 
	
	ЗаголовокЗаготовка = СтрЗаменить(ЗаголовокЗаготовка, "@IgnoreOnCIMainBuild", "");
	
	Результат = Новый Массив;
	Результат.Добавить(ЗаголовокЗаготовка);
	Результат.Добавить(СценарийЗакрытияКлиентаТестирования());
	
	Счетчик = 0;
	Файлы = НайтиФайлы(Путь, "*.feature", Истина);
	Для Каждого Файл Из Файлы Цикл
		Если Найти(Файл.ПолноеИмя, "\Примеры\") > 0 Тогда
			Продолжить;
		КонецЕсли;	 
		
		Текст = Новый ЧтениеТекста;
		Текст.Открыть(Файл.ПолноеИмя, "UTF-8");
		ТекстФайла = Текст.Прочитать();
		Текст.Закрыть();
		
		Если НЕ ВФичеЕстьИсполняемыеШаги(ТекстФайла) Тогда
			Продолжить;
		КонецЕсли;	 
		
		Если Найти(НРег(ТекстФайла), НРег("@IgnoreOnCIMainBuild")) > 0 Тогда
			Продолжить;
		КонецЕсли;	 
		
		Счетчик = Счетчик + 1;
		
		ФайлКаталогФичи = Новый Файл(Файл.Путь);
		
		ТекстСценария = ТекстСценарияЗаготовка;
		ТекстСценария = СтрЗаменить(ТекстСценария, "<ИмяУрока>", Файл.ИмяБезРасширения);
		ТекстСценария = СтрЗаменить(ТекстСценария, "<ИмяФичаФайла>", "$КаталогИнструментов$" + "\training\features\" + ФайлКаталогФичи.Имя + "\" + Файл.Имя);
		
		Результат.Добавить(ТекстСценария);
		
		Если Счетчик >= 7 Тогда
			Счетчик = 0;
			Результат.Добавить(СценарийЗакрытияКлиентаТестирования());
		КонецЕсли;	 
		
	КонецЦикла;	
	
	Результат.Добавить(ОкончаниеФичи());
	
	ФайлЗаготовкаФичи = Новый Файл(ИмяФичаФайлаЗаготовка);
	ИмяФайлаРезультат = ФайлЗаготовкаФичи.Путь + "TestInteraciveHelp.feature";
	ЗТ = Новый ЗаписьТекста(ИмяФайлаРезультат,"UTF-8",, Ложь); 
	ЗТ.Записать(СтрСоединить(Результат)); 
	ЗТ.Закрыть();
	
	Сообщить("Создан файл: " + ИмяФайлаРезультат);
	
КонецПроцедуры 

Функция ОкончаниеФичи()
	Возврат СценарийЗакрытияКлиентаТестирования(); 
КонецФункции	 

Функция СценарийЗакрытияКлиентаТестирования()
	Возврат "Сценарий: Закрытие клиента тестирования
	|	И я закрываю сеанс текущего клиента тестирования
	|
	|"; 
КонецФункции	 

Функция ВФичеЕстьИсполняемыеШаги(ТекстФайла)
	
	МассивСтрок = СтрРазделить(ТекстФайла, Символы.ПС);
	Для Каждого Стр Из МассивСтрок Цикл
		Если НЕ ЗначениеЗаполнено(Стр) Тогда
			Продолжить;
		КонецЕсли;	 
		
		Стр = СокрЛ(Стр);
		
		Если Лев(Стр, 1) = "#" Тогда
			Продолжить;
		ИначеЕсли Лев(Стр, 2) = "//" Тогда
			Продолжить;
		ИначеЕсли Лев(Стр, 1) = "@" Тогда
			Продолжить;
		ИначеЕсли Лев(Стр, 1) = "*" Тогда
			Продолжить;
		ИначеЕсли Лев(Стр, 11) = "Функционал:" Тогда
			Продолжить;
		ИначеЕсли Лев(Стр, 9) = "Сценарий:" Тогда
			Продолжить;
		КонецЕсли;	 
		
		Возврат Истина;
		
	КонецЦикла;	 
	
	Возврат Ложь;
	
КонецФункции	 

Лог = Логирование.ПолучитьЛог("vb.decompile.log");
Лог.УстановитьУровень(УровниЛога.Отладка);

Если АргументыКоманднойСтроки.Количество() = 0 Тогда
	Лог.Ошибка("Не переданы параметры!");
ИначеЕсли АргументыКоманднойСтроки.Количество() <> 2 Тогда
	Лог.Ошибка("Скрипт принимает два параметра.");
Иначе
	СоздатьФичаФайл(АргументыКоманднойСтроки[0], АргументыКоманднойСтроки[1]);
КонецЕсли;

Сообщить("Ошибок не было.");