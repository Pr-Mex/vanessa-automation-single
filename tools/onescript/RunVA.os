#Использовать logos
#Использовать json

Перем Лог;

Функция ПрочитатьФайлJSON(ИмяФайла)
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.ОткрытьФайл(ИмяФайла, "UTF-8");
	Данные = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	
	Возврат Данные;
КонецФункции

Процедура ДополнитьВПутьКаталогПроекта(Путь, КаталогПроекта)
	Путь = СтрЗаменить(Путь, "./", КаталогПроекта + "/");
	Путь = СтрЗаменить(Путь, ".\", КаталогПроекта + "\");
	Путь = СтрЗаменить(Путь, "$workspaceRoot", КаталогПроекта + "\");
КонецПроцедуры

Процедура ЗапускVA(Аргументы)
	
	НайденныеJsonФайлы = Новый Массив;
	
	СтрокаЗапускаСборки = "";
	Для Каждого Стр Из Аргументы Цикл
		Стр = СтрЗаменить(Стр, "\""", """");
		
		МассивСтрок = СтрРазделить(Стр, ";");
		Для Сч = 0 По МассивСтрок.Количество()-1 Цикл
			Если Найти(НРег(МассивСтрок[Сч]), "vaparams=") > 0 ИЛИ Найти(НРег(МассивСтрок[Сч]), "vbparams=") > 0 Тогда
				ТекСтр = СокрЛП(МассивСтрок[Сч]);
				ТекСтр = СтрЗаменить(ТекСтр, """", "");
				Поз = Найти(ТекСтр, "=");
				Если Поз > 0 Тогда
					НайденныеJsonФайлы.Добавить(Сред(ТекСтр, Поз + 1));
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;	
		
		Если ЗначениеЗаполнено(СтрокаЗапускаСборки) Тогда
			СтрокаЗапускаСборки = СтрокаЗапускаСборки + " " + Стр;
		Иначе	
			СтрокаЗапускаСборки = СтрокаЗапускаСборки + Стр;
		КонецЕсли;	
	КонецЦикла;	
	
	Если НайденныеJsonФайлы.Количество() <> 1 Тогда
		Лог.Ошибка("В параметрах запуска не найден путь к файлу VAParams.json");
		ЗавершитьРаботу(1);
	КонецЕсли;
	
	КаталогПроекта = "";
	ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев = "";
	
	ПутьVAParams = НайденныеJsonФайлы[0];
	ПараметрыСборки = ПрочитатьФайлJSON(ПутьVAParams);
	Если ПараметрыСборки.Свойство("КаталогПроекта") Тогда
		КаталогПроекта = ПараметрыСборки.КаталогПроекта;
	КонецЕсли;
	Если ПараметрыСборки.Свойство("ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев") Тогда
		ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев = ПараметрыСборки.ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев;
	КонецЕсли;
	Если ПараметрыСборки.Свойство("ИмяФайлаЛогВыполненияСценариев") Тогда
		ИмяФайлаЛогВыполненияСценариев = ПараметрыСборки.ИмяФайлаЛогВыполненияСценариев;
		Если ЗначениеЗаполнено(ИмяФайлаЛогВыполненияСценариев) Тогда
			Лог.Информация("В файле VAParams.json передан параметр ИмяФайлаЛогВыполненияСценариев. Лог выполнения сценария будет выводиться и в консоль и в файл: " + ИмяФайлаЛогВыполненияСценариев);
		КонецЕсли;	
	КонецЕсли;

	ДополнитьВПутьКаталогПроекта(ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев, КаталогПроекта);
	
	Лог.Информация("КаталогПроекта: " + КаталогПроекта);
	Лог.Информация("ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев: " + ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев);
	Лог.Информация("Строка запуска сборки: " + СтрокаЗапускаСборки);
	
	Если ЗначениеЗаполнено(ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев) Тогда
		Файл = Новый Файл(ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев);
		Если Файл.Существует() Тогда
			Попытка
				УдалитьФайлы(ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев);
				Лог.Информация("Удален файл: " + ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев);
			Исключение
				Сообщить(ОписаниеОшибки(), СтатусСообщения.Важное);
			КонецПопытки;
		КонецЕсли;
	Иначе
		Лог.Ошибка("Не указан параметр ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев.");
		ЗавершитьРаботу(1);
	КонецЕсли;	
	
	Процесс = СоздатьПроцесс(СтрокаЗапускаСборки,,Истина);
	Процесс.Запустить();
	Sleep(5000);
	Пока Истина Цикл
		Если НайтиПроцессПоИдентификатору(Процесс.Идентификатор) = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		Sleep(2000);
		
		Попытка
			Если НЕ Процесс.Завершен ИЛИ Процесс.ПотокВывода.ЕстьДанные ИЛИ Процесс.ПотокОшибок.ЕстьДанные Тогда
				Если Процесс.ПотокВывода.ЕстьДанные Тогда
					ОчереднаяСтрокаВывода = Процесс.ПотокВывода.Прочитать();
					Если Не ПустаяСтрока(ОчереднаяСтрокаВывода) Тогда
						Сообщить(ОчереднаяСтрокаВывода);
					КонецЕсли;
				КонецЕсли;
				
				Если Процесс.ПотокОшибок.ЕстьДанные Тогда
					ОчереднаяСтрокаОшибок = Процесс.ПотокОшибок.Прочитать();
					Если Не ПустаяСтрока(ОчереднаяСтрокаОшибок) Тогда
						Сообщить(ОчереднаяСтрокаОшибок, СтатусСообщения.Важное);
					КонецЕсли;
				КонецЕсли;	 
			КонецЕсли;	 
		Исключение
			Сообщить(ОписаниеОшибки(), СтатусСообщения.Важное);
		КонецПопытки;
		
	КонецЦикла;
	
	Файл = Новый Файл(ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев);
	Если НЕ Файл.Существует() Тогда
		Лог.Ошибка(СтрШаблон("Сборка завершилась, но файл <%1> не найден.", ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев));
		ЗавершитьРаботу(1);
	КонецЕсли;
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев, "UTF-8");
	СтатусСборки = СокрЛП(Текст.Прочитать());
	Текст.Закрыть();
	
	Лог.Информация("Статус сборки: " + СтатусСборки);
	
	Если СтатусСборки <> "0" Тогда
		Лог.Ошибка("Были ошибки");
		ЗавершитьРаботу(1);
	КонецЕсли;	
	
	Сообщить("Ошибок не было.", СтатусСообщения.Информация);
	
КонецПроцедуры

Лог = Логирование.ПолучитьЛог("va.run.log");

Если АргументыКоманднойСтроки.Количество() = 0 Тогда
	Лог.Ошибка("Не переданы параметры!");
Иначе
	ЗапускVA(АргументыКоманднойСтроки);
КонецЕсли;
