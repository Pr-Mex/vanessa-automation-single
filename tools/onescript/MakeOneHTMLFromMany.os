#Использовать v8runner
#Использовать logos

Перем Лог;

Процедура ВыполнитьОбработку(ПутьКФайламHTML, ПутьКФайлуОглавления, КаталогРезультата, ПутьКДаннымВидео)
	
	Если НЕ ЗначениеЗаполнено(ПутьКФайламHTML) Тогда
		ВызватьИсключение "Не заполнен параметр ПутьКФайламHTML";
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(ПутьКФайлуОглавления) Тогда
		ВызватьИсключение "Не заполнен параметр ПутьКФайлуОглавления";
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(КаталогРезультата) Тогда
		ВызватьИсключение "Не заполнен параметр КаталогРезультата";
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(ПутьКДаннымВидео) Тогда
		ВызватьИсключение "Не заполнен параметр ПутьКДаннымВидео";
	КонецЕсли;	
	
	СтрокаДоBody = СтрокаДоBody(ПутьКФайламHTML);
	ИмяФайлаРезультата = КаталогРезультата + "\result.html";
	КаталогКартинок = КаталогРезультата + "\images";
	
	Файл = Новый Файл(КаталогКартинок);
	Если НЕ Файл.Существует() Тогда
		СоздатьКаталог(КаталогКартинок);
	КонецЕсли;	
	
	ОчиститьКаталог(КаталогКартинок);
	
	ДанныеВидео = ДанныеВидео(ПутьКДаннымВидео);
	ЗаписатьРезультат(СтрокаДоBody, ИмяФайлаРезультата, КаталогКартинок, ДанныеВидео, ПутьКФайлуОглавления, ПутьКФайламHTML);
	
	Сообщить("Обработка завершена.");
	
	
КонецПроцедуры

Функция СтрокаДоBody(ПутьКФайламHTML)
	Файлы = НайтиФайлы(ПутьКФайламHTML, "*.html", Истина);
	Для Каждого Файл Из Файлы Цикл
		//Сообщить("" + Файл.ПолноеИмя);
		Текст = Новый ЧтениеТекста;
		Текст.Открыть(Файл.ПолноеИмя, "UTF-8");
		ТекстФайла = Текст.Прочитать();
		Текст.Закрыть();
		
		ТекстФайла = СтрЗаменить(ТекстФайла, "><", ">" + Символы.ПС  + "<");
		
		ЗТ = Новый ЗаписьТекста(Файл.ПолноеИмя,"UTF-8",, Ложь); 
		ЗТ.Записать(ТекстФайла); 
		ЗТ.Закрыть();
		
		//Сообщить(ТекстФайла);
		
		Поз = Найти(ТекстФайла, "<body>");
		Если Поз = 0 Тогда
			ВызватьИсключение "Не найден тег <body> в " + Файл.ПолноеИмя;
		КонецЕсли;	
		ТекстФайла = Лев(ТекстФайла, Поз -1);
		//Сообщить(ТекстФайла);
		
	КонецЦикла;	
	
	Возврат ТекстФайла;
	
КонецФункции	

Процедура ЗаписатьРезультат(СтрокаДоBody, ИмяФайлаРезультата, КаталогКартинок, ДанныеВидео, ПутьКФайлуОглавления, ПутьКФайламHTML)
	
	Массив = Новый Массив;
	Массив.Добавить(СтрокаДоBody);
	Массив.Добавить("<body>");
	
	Массив.Добавить("<header>");
    Массив.Добавить("<h2>Инструкция по работе с Vanessa Automation.</h2>");
	Массив.Добавить("</header>");
      
	Массив.Добавить("<main>");
	
	ДанныеИерархии = Новый Массив;
	ДанныеИзОглавленияMD(ПутьКФайлуОглавления, Массив, ДанныеИерархии);

	Массив.Добавить("<p class=""new-page""></p>");
	
	Для Каждого ТекДанныеИерархии Из ДанныеИерархии Цикл
		ДобавитьДанныеУрока(Массив, ТекДанныеИерархии, ПутьКФайламHTML, КаталогКартинок, ДанныеВидео);
	КонецЦикла;	
	
	Массив.Добавить("</main>");
	Массив.Добавить("</body>");
	Массив.Добавить("</html>");
	
	ЗТ = Новый ЗаписьТекста(ИмяФайлаРезультата,"UTF-8",, Ложь); 
	ЗТ.Записать(СтрСоединить(Массив, Символы.ПС)); 
	ЗТ.Закрыть();
	
	
КонецПроцедуры

Процедура ДанныеИзОглавленияMD(ПутьКФайлу, Массив, ДанныеИерархии)
	
	Массив.Добавить("<nav class=""toc-wrapper"">");
	Массив.Добавить("<h1>Содержание</h1>");
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ПутьКФайлу, "UTF-8");
	ТекстФайла = Текст.Прочитать();
	Текст.Закрыть();
	
	Глава = Неопределено;
	
	ИдМеню = 0;
	
	МассивСтрок = СтрРазделить(ТекстФайла, Символы.ПС);
	Сч = -1;
	ПредыдущийОтступ = -1;
	Уровни = Новый Массив;
	Пока Истина Цикл
		Сч = Сч + 1;
		
		Если Сч > МассивСтрок.Количество()-1 Тогда
			Прервать;
		КонецЕсли;	
		
		ТекСтр = СокрЛП(МассивСтрок[Сч]);
		
		Если НЕ ЗначениеЗаполнено(ТекСтр) Тогда
			Продолжить;
		КонецЕсли; 
		
		Если Найти(ТекСтр, "## Список уроков") > 0 Тогда
			Продолжить;
		ИначеЕсли ТекСтр = "---" Тогда
			Продолжить;
		ИначеЕсли Лев(ТекСтр, 1) = ">" Тогда
			Продолжить;
		ИначеЕсли Найти(ТекСтр, "[") > 0 И Найти(ТекСтр, "![]") = 0 Тогда
			Продолжить;
		КонецЕсли;	
		
		ТекОтступ = СтрДлина(МассивСтрок[Сч]) - СтрДлина(СокрЛ(МассивСтрок[Сч]));
		
		ИдМеню = ИдМеню + 1;
		ДанныеИзСтроки = ДанныеИзСтроки(ТекСтр);
		
		Если ТекОтступ > ПредыдущийОтступ Тогда
			Уровни.Добавить(ТекОтступ);
			ПредыдущийОтступ = ТекОтступ;
			Массив.Добавить("<ul class=""toc_ul"">");
			
		ИначеЕсли ТекОтступ = ПредыдущийОтступ Тогда
		Иначе	
			ПредыдущийОтступ = ТекОтступ;
			Пока Уровни.Количество() > 0 И Уровни[Уровни.Количество() - 1] >= ТекОтступ Цикл
				Уровни.Удалить(Уровни.Количество() - 1);
				Массив.Добавить("</ul>");
			КонецЦикла;	
			
			Массив.Добавить("<ul class=""toc_ul"">");
			Уровни.Добавить(ТекОтступ);
		КонецЕсли;	
		
		ИмяСсылки = СтрШаблон("chapter%1", XMLСтрока(ИдМеню));
		ДанныеИзСтроки.Вставить("ИмяСсылки", ИмяСсылки);
		
		ИмяПунктаМеню = ДанныеИзСтроки.СтрокаБезСпецСимволов;
		Если ДанныеИзСтроки.Свойство("ИмяШага") Тогда
			ИмяПунктаМеню = ДанныеИзСтроки.ИмяШага;
		КонецЕсли;	
		
		Стр = СтрШаблон("<li id=""li_%1"" content=""""><a href=""#%1"">%2</a></li>",ИмяСсылки, ИмяПунктаМеню);
		Массив.Добавить(Стр);
		
		ДанныеИерархии.Добавить(ДанныеИзСтроки);
		
		//ДобавитьУровеньВМеню(Сч, МассивСтрок, Результат);
		
	КонецЦикла;	
	
	//Массив.Добавить("</ul>");
	Массив.Добавить("</nav>");
	
КонецПроцедуры

Процедура ДобавитьУровеньВМеню(Сч, МассивСтрок, ПодчиненныеЭлементы)
	
	Пока Истина Цикл
		Сч = Сч + 1;
		
		Если Сч > МассивСтрок.Количество()-1 Тогда
			Прервать;
		КонецЕсли;	
		
		ТекСтр = СокрЛП(МассивСтрок[Сч]);
		
		Если НЕ ЗначениеЗаполнено(ТекСтр) Тогда
			Продолжить;
		КонецЕсли;   
		
		Если Лев(ТекСтр, 1) = "#" Тогда
			Глава = Новый Структура;
			
			ТекСтр = СокрЛП(СтрЗаменить(ТекСтр, "#", ""));
			Глава.Вставить("Имя", ТекСтр);
			Глава.Вставить("ПодчиненныеЭлементы", Новый Массив);
			
			ПодчиненныеЭлементы.Добавить(Глава);
			
			Продолжить;
		ИначеЕсли ТекСтр = "---" Тогда	
			Продолжить;
		ИначеЕсли Лев(ТекСтр, 1) = "<" Тогда
			Продолжить;
		КонецЕсли;
		
		Если Найти(ТекСтр, "![]") = 0 Тогда
			ДобавитьУровеньВМеню(Сч, МассивСтрок, Глава.ПодчиненныеЭлементы);
		Иначе	
		КонецЕсли;	
		
	КонецЦикла;	
КонецПроцедуры

Функция ДанныеИзСтроки(ТекСтр)
	
	Результат = Новый Структура;
	
	Результат.Вставить("Оригинал", ТекСтр);
	СтрокаБезСпецСимволов = СтрокаБезСпецСимволов(ТекСтр);
	Результат.Вставить("СтрокаБезСпецСимволов", СтрокаБезСпецСимволов);
	
	Поз = Найти(СтрокаБезСпецСимволов, "![]");
	Если Поз > 0 Тогда
		ИмяШага = СокрЛП(Лев(СтрокаБезСпецСимволов, Поз - 1));
		Результат.Вставить("ИмяШага", ИмяШага);
		
		ПраваяЧасть = Сред(СтрокаБезСпецСимволов, Поз + 2);
		
		ИмяФичи = ПраваяЧасть;
		Пока Найти(ИмяФичи, "(") > 0 Цикл
			Поз = Найти(ИмяФичи, "(");
			ИмяФичи = Сред(ИмяФичи, Поз + 1);
		КонецЦикла;
		
		ИмяФичи = СтрЗаменить(ИмяФичи, ")", "");
		Результат.Вставить("ИмяФичи", ИмяФичи);
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции	

Функция СтрокаБезСпецСимволов(Знач ТекСтр)
	Пока Лев(ТекСтр, 1) = "#" Цикл
		ТекСтр = СокрЛП(Сред(ТекСтр, 2));
	КонецЦикла;	
	Пока Лев(ТекСтр, 1) = "-" Цикл
		ТекСтр = СокрЛП(Сред(ТекСтр, 2));
	КонецЦикла;	
	Пока ЭтоЦифра(Лев(ТекСтр, 1)) Цикл
		ТекСтр = СокрЛП(Сред(ТекСтр, 2));
	КонецЦикла;	
	Пока Лев(ТекСтр, 1) = "." Цикл
		ТекСтр = СокрЛП(Сред(ТекСтр, 2));
	КонецЦикла;
	
	ТекСтр = СтрЗаменить(ТекСтр, "*", "");
	
	Возврат ТекСтр;
	
КонецФункции	

Функция ЭтоЦифра(Стр)
	Если Стр = "0" Тогда
		Возврат Истина;
	ИначеЕсли Стр = "1" Тогда
		Возврат Истина;
	ИначеЕсли Стр = "2" Тогда
		Возврат Истина;
	ИначеЕсли Стр = "3" Тогда
		Возврат Истина;
	ИначеЕсли Стр = "4" Тогда
		Возврат Истина;
	ИначеЕсли Стр = "5" Тогда
		Возврат Истина;
	ИначеЕсли Стр = "6" Тогда
		Возврат Истина;
	ИначеЕсли Стр = "7" Тогда
		Возврат Истина;
	ИначеЕсли Стр = "8" Тогда
		Возврат Истина;
	ИначеЕсли Стр = "9" Тогда
		Возврат Истина;
	КонецЕсли;	       
	
	Возврат Ложь;
КонецФункции	

Процедура ДобавитьДанныеУрока(Массив, ТекДанныеИерархии, Путь, КаталогКартинок, ДанныеВидео)
	
	Массив.Добавить(СтрШаблон("<a id=""%1""></a>", ТекДанныеИерархии.ИмяСсылки));
	
	Если ТекДанныеИерархии.Свойство("ИмяФичи") Тогда
		
		ИмяФичи = ТекДанныеИерархии.ИмяФичи;
		СсылкаВидео = "";
		Для Каждого Элем Из ДанныеВидео Цикл
			Если НРег(Элем.ИмяФайлаБезРасширения) = НРег(ИмяФичи) Тогда
				СсылкаВидео = Элем.СсылкаИнтернет;
				Прервать;
			КонецЕсли;	
		КонецЦикла;
		
		Если НЕ ЗначениеЗаполнено(СсылкаВидео) Тогда
			ВызватьИсключение "Не найдена ссылка видео по фиче: " + ИмяФичи;
		КонецЕсли;	
		
		Массив.Добавить(СтрШаблон("<h2>%1</h2>", ТекДанныеИерархии.ИмяШага));
		Если ЗначениеЗаполнено(СсылкаВидео) Тогда
			//Массив.Добавить(СтрШаблон("<a href=""%1"">Видео</a>", СсылкаВидео));
			Массив.Добавить("<div style=""text-align:center;font-size: 30px"">");
			Массив.Добавить(СтрШаблон("<a href=""%1"">Ссылка на видео</a>", СсылкаВидео));
			Массив.Добавить("</div>");
		КонецЕсли;	
		Массив.Добавить("<p class=""new-page""></p>");
		
		
		Файлы = НайтиФайлы(Путь, ИмяФичи + ".html", Истина);
		Если Файлы.Количество() = 0 Тогда
			ВызватьИсключение "Не найден файл html по фиче: " + ИмяФичи;
		КонецЕсли;
		
		Для Каждого Файл Из Файлы Цикл
			
			КаталогИнструкции = Новый Файл(Файл.Путь);
			
			КаталогКартинокДаннойИнструкции = КаталогИнструкции.ПолноеИмя + "\images";
			СкопироватьФайлыВКаталог(КаталогКартинокДаннойИнструкции, КаталогКартинок);
			
			Текст = Новый ЧтениеТекста;
			Текст.Открыть(Файл.ПолноеИмя, "UTF-8");
			ТекстФайла = Текст.Прочитать();
			Текст.Закрыть();
			
			ТекстФайла = СтрЗаменить(ТекстФайла, "><", ">" + Символы.ПС  + "<");
			
			Поз = Найти(ТекстФайла, "<main>");
			Если Поз = 0 Тогда
				ВызватьИсключение "Не найден тег <main> в " + Файл.ПолноеИмя;
			КонецЕсли;
			
			ТекстФайла = Сред(ТекстФайла, Поз + 6);
			
			Поз = Найти(ТекстФайла, "</main>");
			Если Поз = 0 Тогда
				ВызватьИсключение "Не найден тег </main> в " + Файл.ПолноеИмя;
			КонецЕсли;
			
			ТекстФайла = Лев(ТекстФайла, Поз - 1);
			
			//Сообщить(ТекстФайла);
			
			МассивСтрок = СтрРазделить(ТекстФайла, Символы.ПС);
			Для Каждого Стр Из МассивСтрок Цикл
				Массив.Добавить(Стр);
			КонецЦикла;
			
			Массив.Добавить("<p class=""new-page""></p>");
			
		КонецЦикла;
	Иначе
		Массив.Добавить(СтрШаблон("<h2>%1</h2>", ТекДанныеИерархии.СтрокаБезСпецСимволов));
		Массив.Добавить("<p class=""new-page""></p>");
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОчиститьКаталог(Каталог)
	Файлы = НайтиФайлы(Каталог, "*", Истина);
	Для Каждого Файл Из Файлы Цикл
		Если НЕ Файл.ЭтоКаталог() Тогда
			УдалитьФайлы(Файл.ПолноеИмя);
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

Процедура СкопироватьФайлыВКаталог(Откуда, Куда)
	Файлы = НайтиФайлы(Откуда, "*", Истина);
	Для Каждого Файл Из Файлы Цикл
		НовыйПуть = Куда + "\" + Файл.Имя;
		КопироватьФайл(Файл.ПолноеИмя, НовыйПуть);
	КонецЦикла;	
	
КонецПроцедуры

Функция ДанныеВидео(ИмяФайла)
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.ОткрытьФайл(ИмяФайла, "UTF-8");
	Данные = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	
	Возврат Данные;
	
КонецФункции	

Лог = Логирование.ПолучитьЛог("vb.compile.log");
Лог.УстановитьУровень(УровниЛога.Отладка);

Если АргументыКоманднойСтроки.Количество() = 0 Тогда
	Лог.Ошибка("Не переданы параметры!");
ИначеЕсли АргументыКоманднойСтроки.Количество() <> 4 Тогда
	Лог.Ошибка("Скрипт принимает четыре параметра!");
Иначе
	ВыполнитьОбработку(АргументыКоманднойСтроки[0], АргументыКоманднойСтроки[1], АргументыКоманднойСтроки[2], АргументыКоманднойСтроки[3]);
КонецЕсли;
