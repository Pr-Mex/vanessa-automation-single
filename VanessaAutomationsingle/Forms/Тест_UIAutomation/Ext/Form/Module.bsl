
///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Automation
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Automation.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯДелаюКликПоЭлементуКлиентаТестированияUIAutomation(Парам01,Парам02)","ЯДелаюКликПоЭлементуКлиентаТестированияUIAutomation","И я делаю клик по элементу клиента тестирования 'Заголовок' 'Тип' UI Automation","Выполняет поиск элемента с помощью механизма UI Automation. Только под Windows. Необходимо включить использование компоненты VanessaExt. Нужно обязательно передать параметр 'Заголовок'. Параметр 'Тип' необязательный.","Прочее.UI Automation");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Функция выполняется перед началом каждого сценария
Функция ПередНачаломСценария() Экспорт
	
КонецФункции

&НаКлиенте
// Функция выполняется перед окончанием каждого сценария
Функция ПередОкончаниемСценария() Экспорт
	
КонецФункции



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И я делаю клик по объекту 'Заголовок' 'Тип' UI Automation
//@ЯДелаюКликПоЭлементуКлиентаТестированияUIAutomation(Парам01,Парам02)
Функция ЯДелаюКликПоЭлементуКлиентаТестированияUIAutomation(Заголовок, Тип = "") Экспорт
	
	ТекстСообщения = "";
	СтрокаОшибки = "";
	БылаОшибка = Ложь;
	
	КоличествоПопыток = Ванесса.ЗначениеКоличествоПопытокВыполненияДействия();
	Для СчетчикПопыток = 1 По КоличествоПопыток Цикл
		БылаОшибка = Ложь;
		СтрокаОшибки = "";
	
		Попытка
			ТекущиеДанныеКлиентаТестирования = Ванесса.ТекущиеДанныеКлиентаТестирования();
			Если ЗначениеЗаполнено(Тип) Тогда
				ДанныеЭлементов = Ванесса.ПрочитатьОбъектJSON(Ванесса.ВнешняяКомпонентаДляСкриншотов.НайтиЭлементы(ТекущиеДанныеКлиентаТестирования.PIDКлиентаТестирования, Заголовок, Тип));
			Иначе	
				ДанныеЭлементов = Ванесса.ПрочитатьОбъектJSON(Ванесса.ВнешняяКомпонентаДляСкриншотов.НайтиЭлементы(ТекущиеДанныеКлиентаТестирования.PIDКлиентаТестирования, Заголовок));
			КонецЕсли;	 
			
			Если ДанныеЭлементов = Неопределено Тогда
				ВызватьИсключение Ванесса.ПодставитьПараметрыВСтроку(
					Ванесса.Локализовать("Не получилось найти элемент UI Automation. PID <%1>, заголовок <%2>, тип <%3>."),
					ТекущиеДанныеКлиентаТестирования.PIDКлиентаТестирования, Заголовок, Тип);
			КонецЕсли;	 
			
			Если ДанныеЭлементов.Количество() = 0 Тогда
				ВызватьИсключение Ванесса.ПодставитьПараметрыВСтроку(
					Ванесса.Локализовать("Не получилось найти элемент UI Automation. PID <%1>, заголовок <%2>, тип <%3>."),
					ТекущиеДанныеКлиентаТестирования.PIDКлиентаТестирования, Заголовок, Тип);
			КонецЕсли;	 
			
			Если ДанныеЭлементов.Количество() > 1 Тогда
				ВызватьИсключение Ванесса.ПодставитьПараметрыВСтроку(
					Ванесса.Локализовать("Найдено <%1> элементов UI Automation по переданным данным PID <%2>, заголовок <%3>, тип <%4>."),
					ДанныеЭлементов.Количество(), ТекущиеДанныеКлиентаТестирования.PIDКлиентаТестирования, Заголовок, Тип);
			КонецЕсли;	 
				
			Ванесса.КликПоЭлементуБезПеремещенияМышкиUIAutomation(ДанныеЭлементов[0].size);
		Исключение
			СтрокаОшибки = ОписаниеОшибки();
			БылаОшибка = Истина;
			Если СчетчикПопыток < КоличествоПопыток Тогда
				Ванесса.sleep(1);
			КонецЕсли;	 
		КонецПопытки;
		
		Если НЕ БылаОшибка Тогда
			Прервать;
		КонецЕсли;	 
	КонецЦикла;

	Если БылаОшибка Тогда
		ВызватьИсключение СтрокаОшибки;
	КонецЕсли;	 
	
КонецФункции
