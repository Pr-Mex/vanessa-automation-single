&НаКлиенте
Перем Ванесса;

#Область ОбработкаСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	МетаданныеПолноеИмя = ОбъектСервер.Метаданные().ПолноеИмя();
	Заголовок = ОбъектСервер.ПолучитьВерсиюОбработки(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВыполнитьПриСозданииНаСервере", Ложь);
	ИмяФормыVA = ИмяФормыVA();
	Ванесса = ПолучитьФорму(ИмяФормыVA, ПараметрыФормы);
	
	ShowMainForm = Ванесса.ЗначениеПараметраЗапуска("ShowMainForm");
	Если ShowMainForm = Неопределено Тогда
		ShowMainForm = Ложь;
	КонецЕсли;	 
	
	SPPR = Ванесса.ЗначениеПараметраЗапуска("SPPR");
	Если SPPR = Неопределено Тогда
		SPPR = Ложь;
	КонецЕсли;	 
	
	StartFeaturePlayer = Ванесса.ЗначениеПараметраЗапуска("StartFeaturePlayer");
	Если StartFeaturePlayer = Неопределено Тогда
		StartFeaturePlayer = Ложь;
	КонецЕсли;	
	
	UseEditor = Ванесса.ЗначениеПараметраЗапуска("UseEditor", Истина);
	Если UseEditor = Неопределено Тогда
		UseEditor = Ложь;
	КонецЕсли;	
	
	ПоказатьОсновнуюФорму = Ложь;
	Если НЕ StartFeaturePlayer Тогда
		ПоказатьОсновнуюФорму = Истина;
	ИначеЕсли StartFeaturePlayer И (SPPR ИЛИ ShowMainForm) Тогда
		ПоказатьОсновнуюФорму = Истина;
	ИначеЕсли StartFeaturePlayer Тогда
		ПоказатьОсновнуюФорму = Ложь;
	КонецЕсли;
	
	Ванесса = Неопределено;
	Если ПоказатьОсновнуюФорму Тогда
		//Просто открываем основную форму.
		Отказ = Истина;
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ИнициализироватьVanessaEditor", UseEditor);
		ОткрытьФорму(ИмяФормыVA, ПараметрыФормы);
	Иначе
		//Оставляем служебную форму открытой и запускаем сценарии в основной форме.
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ИнициализироватьVanessaEditor", UseEditor);
		Ванесса = ПолучитьФорму(ИмяФормыVA, ПараметрыФормы);
		Ванесса.ВыполнитьСценарииСЧтениемПараметровИзКоманднойСтроки();
	КонецЕсли;	 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Ванесса = Неопределено;
КонецПроцедуры

#КонецОбласти

#Область КомандыФормы

&НаКлиенте
Процедура ОткрытьОсновнуюФорму(Команда)
	Ванесса.Открыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ИмяФормыVA()
	
	Если Лев(МетаданныеПолноеИмя, 9) = "Обработка" ИЛИ Лев(МетаданныеПолноеИмя, 13) = "DataProcessor" Тогда
		ПерваяЧасть = "Обработка";
	Иначе	
		ПерваяЧасть = "ВнешняяОбработка";
	КонецЕсли;	 
	
	МассивСтрок = РазложитьСтрокуВМассивПодстрок(МетаданныеПолноеИмя, ".");
	ВтораяЧасть = МассивСтрок[1];
	
	Возврат ПерваяЧасть + "." + ВтораяЧасть + ".Форма.УправляемаяФорма"; 
	
КонецФункции	 

// Обертка для функции РазложитьСтрокуВМассивПодстрок()
// Нужна, т.к. не работает вызов Ванесса.РазложитьСтрокуВМассивПодстрок() из других обработок.
&НаКлиенте
Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено, 
		ЕстьПоддержкаФункцияРазложитьСтрокуВМассивПодстрок = Ложь)
	
	Результат = Новый Массив;
	
	// для обеспечения обратной совместимости
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = " ", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда 
			Если Разделитель = " " Тогда
				Результат.Добавить("");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;

	Если ЕстьПоддержкаФункцияРазложитьСтрокуВМассивПодстрок И СтрДлина(Разделитель) = 1 Тогда
		Если ПропускатьПустыеСтроки = Истина Тогда
			Возврат Вычислить("СтрРазделить(Строка,Разделитель,Ложь)");
		Иначе
			Возврат Вычислить("СтрРазделить(Строка,Разделитель,Истина)");
		КонецЕсли;	 
	КонецЕсли;	 
	
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Результат.Добавить(Подстрока);
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Результат.Добавить(Строка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

#КонецОбласти